@model DataLayer.Entities.Movement

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        Account
        <small>Create</small>
    </h1>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <!-- left column -->
        <div class="col-lg-12">
            <!-- general form elements -->
            <div class="box box-danger">
                <div class="box-header with-border">
                    <h3 class="box-title">Create a Account</h3>
                </div>
                <!-- /.box-header -->
                <!-- form start -->

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <form role="form">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="box-body">

                            <div class="form-group">
                                <label for="Name">Account ID</label>
                                <input type="text" class="form-control" name="AccountId" id="AccountId" value="@Model.AccountId" readonly>
                                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label for="Name">Amount</label>
                                <input type="text" class="form-control" name="Amount" id="Amount" value="@Model.Amount" readonly>
                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                            </div>

                            @if (ViewBag["Type"] == 1)
                            {
                                <div class="form-group">
                                    <label for="Name">Destination account</label>
                                    <input type="text" class="form-control" name="Amount" id="Amount" value="@Model.Amount" readonly>
                                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                </div>
                            }

                        </div>
                        <!-- /.box-body -->

                        <div class="box-footer">
                            <button type="submit" value="Create" class="btn btn-github">Create</button>
                            @Html.ActionLink("Volver", "Index", "Account", null, new { @class = "btn btn-default" })
                        </div>

                    </form>
                }
            </div>
            <!-- /.box -->
        </div>
    </div>
    <!-- /.row -->
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movement</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountId, "AccountId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AccountId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
